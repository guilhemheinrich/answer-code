library(shiny)
library(opensilexClientR)
library(formattable)
remotes::install_github('OpenSILEX/opensilexClientR', build_vignettes=FALSE, ref='1.0.0')
library(opensilexClientR)
library(plotly)
library(stringr)
library(forecast)
library(future)
library(ipc)
library(promises)
plan(multiprocess)
install_github("OpenSILEX/opensilexClientToolsR",  ref="1.0.0")
remotes::install_github("OpenSILEX/opensilexClientToolsR",  ref="1.0.0")
Sys.setenv(TAR = "/bin/tar")
remotes::install_github("OpenSILEX/opensilexClientToolsR",  ref="1.0.0")
library(opensilexClientToolsR)
help(package = 'opensilexClientToolsR')
connectToOpenSILEX(identifier = "admin@opensilex.org", password = "admin",
url = "http://138.102.159.36:8081/rest")
scientfic_objects_api <- ScientificObjectsApi$new()
scientfic_objects_api$search_scientific_objects()
scientfic_objects_api$search_scientific_objects()$data
scientfic_object <- scientfic_objects_api$search_scientific_objects()$data[1:6]
scientfic_object[0]
scientfic_object[0]$uri
scientfic_object[0]
scientfic_object[0][0]
scientfic_object[[0]]
class(scientific_object[0])
scientific_objects_api <- ScientificObjectsApi$new()
scientific_object <- scientfic_objects_api$search_scientific_objects()$data[1:6]
scientific_object[0]
class(scientific_object[0])
length(scientific_object[0])
scientific_object <- scientfic_objects_api$search_scientific_objects()$data
length(scientific_object[0])
scientific_object
scientific_object[0]$name
scientific_object[1]$name
scientific_object[[1]]$name
scientific_object[[1]]$uri
experiments_api <- ExperimentsApi$new()
experiments <- experiments_api$search_experiments()
experiments
scientific_object <- data.frame(scientfic_objects_api$search_scientific_objects()$data[1:6])
scientific_object <- scientfic_objects_api$search_scientific_objects()$data[1:6]
experiments <- experiments_api$search_experiments()$data[c(1:3,5,7)]
experiments
library(shiny)
library(DT)
library(glue)
library(grDevices)
library(EnvStats)
library(knitr)
library(dplyr)
library(kableExtra)
library(formattable)
library(opensilexClientR)
library(opensilexClientToolsR)
library(plotly)
library(stringr)
library(forecast)
library(future)
library(ipc)
library(parallel)
library(promises)
library(rhandsontable)
future::plan(future::multiprocess)
connectToOpenSILEX(identifier = "admin@opensilex.org", password = "admin",
url = "http://138.102.159.36:8081/rest")
scientific_objects_api <- ScientificObjectsApi$new()
scientific_object <- scientfic_objects_api$search_scientific_objects()$data[1:6]
scientific_objects_api <- ScientificObjectsApi$new()
scientific_object <- scientfic_objects_api$search_scientific_objects()$data[1:6]
scientific_object <- scientific_objects_api$search_scientific_objects()$data[1:6]
extract_from_environment <- function(environment, key) {
return(environment$key)
}
dodo$a <- "lo"
dodo <- new.env()
dodo$a <- "lo"
extract_from_environment(dodo, "a")
dodo$a
dodo$"a"
extract_from_environment <- function(environment, key) {
return(get(key, envir = environment))
}
extract_from_environment(dodo, "a")
extract_from_environment <- function(environment, key, ...) {
all_keys <- c(key, ...)
return(mget(all_keys, envir = environment))
}
extract_from_environment(dodo, "a")
dodo$a <- "alo"
dodo$b <- "blo"
dodo$c <- "clo"
extract_from_environment(dodo, "a", "b")
extract_from_environment <- function(environment, key, ...) {
all_keys <- c(key, ...)
return(unlist(mget(all_keys, envir = environment)))
}
extract_from_environment(dodo, "a", "b")
dodo1 <- new.env()
dodo1$a <- "alo1"
dodo1$b <- "blo1"
dodo1$c <- "clo1"
dodo2 <- new.env()
dodo2$a <- "alo2"
dodo2$b <- "blo2"
dodo2$c <- "clo2"
dodo3 <- new.env()
dodo3$a <- "alo3"
dodo3$b <- "blo3"
dodo3$c <- "clo3"
extract_from_environment(dodo1, "a", "b")
envlist <- list(dodo1, dodo2, dodo3)
envlist[[1]]
envlist[[1]]$a
EnvironmentList_to_dataframe(envlist, "b", "c")
EnvironmentList_to_dataframe <- function(EnvironmentList, key, ...) {
all_keys <- c(key, ...)
sapply(EnvironmentList, (function (env) extract_from_environment(env, key, ...)), simplify="array")
}
EnvironmentList_to_dataframe(envlist, "b", "c")
EnvironmentList_to_dataframe <- function(EnvironmentList, key, ...) {
all_keys <- c(key, ...)
result <- sapply(EnvironmentList, (function (env) extract_from_environment(env, key, ...)), simplify="array")
return(data.frame(result.solve()))
}
EnvironmentList_to_dataframe(envlist, "b", "c")
EnvironmentList_to_dataframe <- function(EnvironmentList, key, ...) {
all_keys <- c(key, ...)
result <- sapply(EnvironmentList, (function (env) extract_from_environment(env, key, ...)), simplify="array")
return(data.frame(solve(result)))
}
EnvironmentList_to_dataframe(envlist, "b", "c")
EnvironmentList_to_dataframe <- function(EnvironmentList, key, ...) {
all_keys <- c(key, ...)
result <- sapply(EnvironmentList, (function (env) extract_from_environment(env, key, ...)), simplify="array")
return(data.frame(t(result)))
}
EnvironmentList_to_dataframe(envlist, "b", "c")
(file = "~/code/ANSWER-code/NEW/helper/r6_to_dataframe.R")
source(file = "~/code/ANSWER-code/NEW/helper/r6_to_dataframe.R")
scientific_object
EnvironmentList_to_dataframe(scientific_object, "uri", "rdf_type_name")
scientific_objects <- scientific_objects_api$search_scientific_objects()$data[1:6]
ExperimentsApi
experiments <- experiments_api$search_experiments()$data[c(1:3,5,7)]
experiments_api <- ExperimentsApi$new()
experiments <- experiments_api$search_experiments()$data[c(1:3,5,7)]
experiments
experiments_df <- EnvironmentList_to_dataframe(experiments, "uri", "name")
experiments_df
source(file = "~/code/ANSWER-code/NEW/helper/r6_to_dataframe.R")
scientific_objects_df <- EnvironmentList_to_dataframe(scientific_objects, "uri", "rdf_type_name")
experiments_df <- EnvironmentList_to_dataframe(experiments, "uri", "name")
experiments_df
View(scientific_objects_df)
source(file = "~/code/ANSWER-code/NEW/helper/r6_to_dataframe.R")
scientific_objects_df <- EnvironmentList_to_dataframe(scientific_objects, "uri", "rdf_type_name")
df0 = left_join(obj, exp, by = c("experiment" = "uri"))
View(scientific_objects_df)
View(scientific_objects)
str(scientifi_object[[0]])
str(scientific_objects[[0]])
str(scientific_objects[[0]]$uri)
str(scientific_objects[[1]]$uri)
str(scientific_objects[[1]])
str(scientific_objects[[1]]$uri)
str(scientific_objects[[1]]$uri)$type
typeof(scientific_objects[[1]]$uri)
typeof(scientific_objects[[1]])
get_primitive <- function(environment) {
all_attributes <- ls(envir = environment)
# typeof()
return(all_attributes)
}
get_primitive(dodo1)
get_primitive(scientific_objects[[1]])
get_primitive <- function(environment) {
all_properties <- ls(envir = environment)
all_attributes <- sapply(all_attributes, (function (prop) typeof(get(prop, envir = environment))))
# typeof()
return(all_attributes)
}
get_primitive(scientific_objects[[1]])
get_primitive <- function(environment) {
all_properties <- ls(envir = environment)
all_attributes <- sapply(all_properties, (function (prop) typeof(get(prop, envir = environment))))
# typeof()
return(all_attributes)
}
get_primitive(scientific_objects[[1]])
get_primitive <- function(environment) {
all_properties <- ls(envir = environment)
all_types <- sapply(all_properties, (function (prop) typeof(get(prop, envir = environment))))
all_attributes <- all_properties[all_types=="logical" | all_types=="character"]
return(all_attributes)
}
get_primitive(scientific_objects[[1]])
get_attributes <- function(environment) {
all_properties <- ls(envir = environment)
all_types <- sapply(all_properties, (function (prop) typeof(get(prop, envir = environment))))
all_attributes <- all_properties[all_types=="logical" | all_types=="character" | all_types=="numeric" | all_types=="complex" | all_types=="integer" ]
return(all_attributes)
}
dodo1 <- new.env()
dodo1$a <- "alo1"
source(file = "~/code/ANSWER-code/NEW/helper/r6_to_dataframe.R")
scientific_objects_df <- EnvironmentList_to_dataframe(scientific_objects)
source(file = "~/code/ANSWER-code/NEW/helper/r6_to_dataframe.R")
extract_from_environment <- function(environment, ...) {
all_keys <- ...
return(unlist(mget(all_keys, envir = environment)))
}
extract_from_environment(dodo1, "a", "b")
extract_from_environment <- function(environment, ...) {
all_keys <- c(...)
return(unlist(mget(all_keys, envir = environment)))
}
extract_from_environment(dodo1, "a", "b")
EnvironmentList_to_dataframe <- function(environmentList, ...) {
all_keys <- c(...)
if (length(all_keys) == 0) {
all_keys <- get_attributes(environmentList[[0]])
}
result <- sapply(EnvironmentList, (function (env) extract_from_environment(env, unlist(all_keys)), simplify="array")
return(data.frame(t(result)))
}
EnvironmentList_to_dataframe <- function(environmentList, ...) {
all_keys <- c(...)
if (length(all_keys) == 0) {
all_keys <- get_attributes(environmentList[[0]])
}
result <- sapply(EnvironmentList, (function (env) extract_from_environment(env, all_keys), simplify="array")
return(data.frame(t(result)))
}
EnvironmentList_to_dataframe <- function(environmentList, ...) {
all_keys <- c(...)
if (length(all_keys) == 0) {
all_keys <- get_attributes(environmentList[[0]])
}
result <- sapply(EnvironmentList, (function (env) extract_from_environment(env, all_keys)), simplify="array")
return(data.frame(t(result)))
}
EnvironmentList_to_dataframe <- function(environmentList, ...) {
all_keys <- c(...)
if (length(all_keys) == 0) {
all_keys <- get_attributes(environmentList[[0]])
}
result <- sapply(EnvironmentList, (function (env) extract_from_environment(env, unlist(all_keys))), simplify="array")
return(data.frame(t(result)))
}
EnvironmentList_to_dataframe(envlist, "b", "c")
dodo1 <- new.env()
dodo1$a <- "alo1"
dodo1$b <- "blo1"
dodo1$c <- "clo1"
dodo2 <- new.env()
dodo2$a <- "alo2"
dodo2$b <- "blo2"
dodo2$c <- "clo2"
dodo3 <- new.env()
dodo3$a <- "alo3"
dodo3$b <- "blo3"
dodo3$c <- "clo3"
envlist <- list(dodo1, dodo2, dodo3)
EnvironmentList_to_dataframe(envlist, "b", "c")
EnvironmentList_to_dataframe <- function(environmentList, ...) {
all_keys <- c(...)
if (length(all_keys) == 0) {
all_keys <- get_attributes(environmentList[[0]])
}
result <- sapply(environmentList, (function (env) extract_from_environment(env, unlist(all_keys))), simplify="array")
return(data.frame(t(result)))
}
EnvironmentList_to_dataframe(envlist, "b", "c")
source(file = "~/code/ANSWER-code/NEW/helper/r6_to_dataframe.R")
scientific_objects_df <- EnvironmentList_to_dataframe(scientific_objects)
EnvironmentList_to_dataframe <- function(environmentList, ...) {
all_keys <- c(...)
if (length(all_keys) == 0) {
all_keys <- get_attributes(environmentList[[1]])
}
result <- sapply(environmentList, (function (env) extract_from_environment(env, unlist(all_keys))), simplify="array")
return(data.frame(t(result)))
}
source(file = "~/code/ANSWER-code/NEW/helper/r6_to_dataframe.R")
scientific_objects_df <- EnvironmentList_to_dataframe(scientific_objects)
experiments_df <- EnvironmentList_to_dataframe(experiments)
View(scientific_objects_df)
